[{"/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/index.js":"1","/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/reportWebVitals.js":"2","/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/App.js":"3","/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/components/Nav/Nav.js":"4","/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/components/Portfolio/Portfolio.js":"5","/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/components/About/About.js":"6","/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/components/SignIn/SignIn.js":"7","/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/components/Header/Header.js":"8","/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/components/Footer.js":"9","/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/components/Dropdown/Dropdown.js":"10","/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/Pages/System Logs/SystemLogs.js":"11","/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/Pages/Popup Preview/PopupPreview.js":"12","/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/components/Scroll/scroll.js":"13","/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/components/Scroll/Scroll.js":"14","/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/Pages/Demand Report/demandReport.js":"15","/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/components/ScrollToTop.js":"16","/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/Pages/Criteria/criteria.js":"17","/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/index.js":"18","/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/reportWebVitals.js":"19","/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/App.js":"20","/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/components/Header/Header.js":"21","/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/components/Footer.js":"22","/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/components/ScrollToTop.js":"23","/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/components/About/About.js":"24","/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/components/Nav/Nav.js":"25","/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/components/SignIn/SignIn.js":"26","/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/components/Portfolio/Portfolio.js":"27","/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/components/Dropdown/Dropdown.js":"28","/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/Pages/Popup Preview/PopupPreview.js":"29","/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/Pages/Criteria/criteria.js":"30","/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/Pages/System Logs/SystemLogs.js":"31"},{"size":593,"mtime":1618341132352,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1612100276562,"results":"34","hashOfConfig":"33"},{"size":2990,"mtime":1618505523803,"results":"35","hashOfConfig":"33"},{"size":1613,"mtime":1618505587596,"results":"36","hashOfConfig":"33"},{"size":3388,"mtime":1618343144200,"results":"37","hashOfConfig":"33"},{"size":1607,"mtime":1618581238124,"results":"38","hashOfConfig":"33"},{"size":3131,"mtime":1614707721887,"results":"39","hashOfConfig":"33"},{"size":1524,"mtime":1618059341738,"results":"40","hashOfConfig":"33"},{"size":256,"mtime":1618343593050,"results":"41","hashOfConfig":"33"},{"size":1361,"mtime":1612475014618,"results":"42","hashOfConfig":"33"},{"size":23351,"mtime":1618070465797,"results":"43","hashOfConfig":"33"},{"size":29285,"mtime":1618066956865,"results":"44","hashOfConfig":"33"},{"size":348,"mtime":1616246960363,"results":"45","hashOfConfig":"33"},{"size":348,"mtime":1616246960363,"results":"46","hashOfConfig":"33"},{"size":1707,"mtime":1618062895957,"results":"47","hashOfConfig":"33"},{"size":333,"mtime":1618341687596,"results":"48","hashOfConfig":"33"},{"size":1505,"mtime":1618508305795,"results":"49","hashOfConfig":"33"},{"size":627,"mtime":1619110327047,"results":"50","hashOfConfig":"51"},{"size":362,"mtime":1612100276562,"results":"52","hashOfConfig":"51"},{"size":2218,"mtime":1619110667693,"results":"53","hashOfConfig":"51"},{"size":1534,"mtime":1619118971036,"results":"54","hashOfConfig":"51"},{"size":256,"mtime":1618343593050,"results":"55","hashOfConfig":"51"},{"size":333,"mtime":1618341687596,"results":"56","hashOfConfig":"51"},{"size":975,"mtime":1619030101712,"results":"57","hashOfConfig":"51"},{"size":4914,"mtime":1619111704783,"results":"58","hashOfConfig":"51"},{"size":3001,"mtime":1618949560896,"results":"59","hashOfConfig":"51"},{"size":2375,"mtime":1618853916037,"results":"60","hashOfConfig":"51"},{"size":1361,"mtime":1612475014618,"results":"61","hashOfConfig":"51"},{"size":15748,"mtime":1619204204500,"results":"62","hashOfConfig":"51"},{"size":1505,"mtime":1618508305795,"results":"63","hashOfConfig":"51"},{"size":15740,"mtime":1619204126486,"results":"64","hashOfConfig":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"1t3qks9",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"67"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"67"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"67"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"67"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11jhxgj",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/index.js",[],["133","134"],"/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/reportWebVitals.js",[],"/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/App.js",["135","136"],"import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Nav from './components/Nav/Nav';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer';\nimport About from './components/About/About';\nimport Dropdown from './components/Dropdown/Dropdown';\nimport Portfolio from './components/Portfolio/Portfolio';\nimport Signin from './components/SignIn/SignIn';\nimport SystemLogs from './Pages/System Logs/SystemLogs';\nimport PopupPreview from './Pages/Popup Preview/PopupPreview';\nimport DemandReport from './Pages/Demand Report/demandReport';\nimport ScrollToTop from './components/ScrollToTop';\nimport Criteria from './Pages/Criteria/criteria';\n\nconst initialState = {\n  route: 'signin',\n  isSignedIn: false,\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      route: 'signin',\n      isSignedIn: false,\n    };\n  }\n\n  // [isOpen, setIsOpen] = useState(false);\n\n  // toggle = () => {\n  //   setIsOpen(!isOpen);\n  // };\n  // useEffect = () => {\n  //   const hideMenu = () => {\n  //     if ((window.innerWidth > 768) & isOpen) {\n  //       setIsOpen(false);\n  //     }\n  //   };\n  //   window.addEventListener('resize', hideMenu);\n\n  //   return () => {\n  //     window.removeEventListener('resize', hideMenu);\n  //   };\n  // };\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({ isSignedIn: false });\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route: route });\n  };\n\n  render() {\n    const { isSignedIn, route } = this.state;\n\n    return (\n      <Router>\n        <div className='App'>\n          {/* <Nav toggle={toggle} /> */}\n          {/* <Dropdown isOpen={isOpen} toggle={toggle} /> */}\n\n          {route === 'signin' ? (\n            <Signin onRouteChange={this.onRouteChange} />\n          ) : (\n            <div>\n              <Nav isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n              <ScrollToTop />\n              <Switch>\n                <Route\n                  exact\n                  path='/'\n                  render={() => (\n                    <Fragment>\n                      <Header onRouteChange={this.onRouteChange} />\n                      <About />\n                      <Portfolio />\n                    </Fragment>\n                  )}\n                />\n                <Route exact path='/system-logs' component={SystemLogs} />\n                <Route exact path='/popup-preview' component={PopupPreview} />\n                <Route exact path='/demand-report' component={DemandReport} />\n                <Route exact path='/criteria' component={Criteria} />\n              </Switch>\n              <Footer />\n            </div>\n          )}\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/components/Nav/Nav.js",["137","138","139","140"],"import React from 'react';\nimport { Route, Router, Switch } from 'react-router-dom';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport Criteria from '../../Pages/Criteria/criteria';\nimport './nav.css';\n\nconst Nav = ({ toggle, onRouteChange, isSignedIn }) => {\n  return (\n    <nav\n      className='flex justify-between items-center h-16 text-black shadow-sm font-mono fixed w-full z-20 bg-pattern'\n      role='navigation'\n    >\n      {/* <div className='px-4 cursor-pointer md:hidden' onClick={toggle}>\n        <svg\n          className='w-6 h-6'\n          xmlns='http://www.w3.org/2000/svg'\n          viewBox='0 0 20 20'\n          fill='currentColor'\n        >\n          <path\n            fillRule='evenodd'\n            d='M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z'\n            clipRule='evenodd'\n          />\n        </svg>\n      </div> */}\n      <div className='pr-8'>\n        <Link className='p-4 hover:text-green-500' to='/#home'>\n          Home\n        </Link>\n        <Link className='p-4 hover:text-green-500' to='/#about'>\n          About\n        </Link>\n        <Link className='p-4 hover:text-green-500' to='/#portfolio'>\n          Portfolio\n        </Link>\n        <Link className='p-4 hover:text-green-500' to='/criteria'>\n          Criteria\n        </Link>\n      </div>\n      <div onClick={() => onRouteChange('signin')}>\n        <Link to='/' className='pr-8 hover:text-green-500' id='signOutLg'>\n          Logout\n        </Link>\n      </div>\n    </nav>\n  );\n};\n\nexport default Nav;\n","/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/components/Portfolio/Portfolio.js",[],"/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/components/About/About.js",[],"/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/components/SignIn/SignIn.js",["141"],"import React from 'react';\n\nclass Signin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signInUsername: '',\n      signInPassword: '',\n    };\n  }\n\n  onUsernameChange = (event) => {\n    this.setState({ signInUsername: event.target.value });\n  };\n  onPasswordChange = (event) => {\n    this.setState({ signInPassword: event.target.value });\n  };\n\n  loading = () => {\n    const btn = document.getElementById('sign-in');\n    return (btn.innerText = 'Loading ...');\n  };\n\n  onSubmitSignIn = (event) => {\n    event.preventDefault();\n    fetch('https://pure-dusk-78963.herokuapp.com/signin', {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        username: this.state.signInUsername,\n        password: this.state.signInPassword,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data === 'success') {\n          this.props.onRouteChange('home');\n        }\n        if (data === 'success') {\n          this.props.onRouteChange('home');\n        }\n        if (data === 'error logging in') {\n          document.getElementById('error').classList.remove('hidden');\n          document.getElementById('sign-in').innerText = 'Sign In!';\n          document.getElementById('un').value = '';\n          document.getElementById('pw').value = '';\n        }\n      });\n  };\n\n  render() {\n    const { onRouteChange } = this.props;\n    return (\n      <div\n        className='bg-pink-100 py-20 grid h-full place-items-center'\n        id='signin'\n      >\n        <div className='m-2 font-sans leading-normal transform'>\n          <form\n            onSubmit={this.onSubmitSignIn}\n            className='shadow-2xl rounded-lg overflow-hidden pt-10 grid place-items-center bg-blue-100 pl-20 pr-20'\n          >\n            <label className='font-mono pb-2' id='username' htmlFor='username'>\n              Username\n            </label>\n            <input\n              onChange={this.onUsernameChange}\n              className='w-full opacity-60 outline-none'\n              type='username'\n              id='un'\n            />\n            <label\n              className='font-mono pt-5 pb-2'\n              id='password'\n              htmlFor='password'\n            >\n              Password\n            </label>\n            <input\n              className='w-full opacity-60 outline-none'\n              type='password'\n              onChange={this.onPasswordChange}\n              id='pw'\n            />\n            <div id='error' className='px-6 py-4 hidden text-red-400'>\n              Incorrect username/password\n            </div>\n            <div className='px-6 py-4 '>\n              <button\n                type='submit'\n                value='Sign in'\n                id='sign-in'\n                className='py-3 px-6 text-black font-bold rounded-full mt-1 mb-2 bg-green-200 hover:bg-green-500 font-mono'\n                onClick={this.loading}\n              >\n                Sign In!\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Signin;\n","/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/components/Header/Header.js",[],"/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/components/Footer.js",[],"/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/components/Dropdown/Dropdown.js",[],"/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/Pages/System Logs/SystemLogs.js",[],"/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/Pages/Popup Preview/PopupPreview.js",["142","143","144","145"],"import React from 'react';\nimport plan from './images/plan.png';\nimport call from './images/call.gif';\nimport prevbtn from './images/prevbtn.png';\nimport prevfunc from './images/prevfunc.png';\nimport constructor from './images/constructor.png';\nimport centreP from './images/centreP.png';\nimport service from './images/service.png';\nimport flow from './images/flow.png';\nimport formPug from './images/formPug.png';\nimport formPug2 from './images/formPug2.png';\nimport inputs from './images/inputs.png';\nimport backend from './images/backend.png';\nimport migrationhelp from './images/migrationhelp.png';\nimport migration from './images/migration.png';\nimport db from './images/db.png';\nimport renderer from './images/renderer.png';\nimport tempSwitch from './images/tempSwitch.png';\nimport model from './images/model.png';\nimport media from './images/media.png';\nimport google from './images/google.gif';\nimport jsonText from './images/jsonText.png';\nimport rendPug from './images/rendPug.png';\nimport signin from './images/signin.png';\nimport websocket from './images/websocket.png';\nimport explain from './images/explain.png';\nimport organise from './images/organise.png';\nimport feedback from './images/feedback.png';\nimport video from './images/finalvideo.mp4';\nimport './popuppreview.css';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nconst PopupPreview = () => {\n  return (\n    <div className='flex flex-col ml-9 mr-9 py-20 font-mono mb-10 lg:mx-40'>\n      <h2 className='main-title flex flex-col justify-center items-center font-bold text-lg my-20'>\n        Popup Preview\n      </h2>\n      <div className='md:px-8 mb-20'>\n        <h3 className='title mb-8 font-semibold'>Task</h3>\n        <img\n          src={plan}\n          alt='Pic of code'\n          className='rounded-lg md:w-2/6 md:float-left md:ml-20 md:mr-8 mb-5 transform md:hover:scale-150'\n        />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          The user is able to create a landing page for their product and there\n          is a ‘preview’ of this but it was not reflecting 100% how the finished\n          page would look. The task was to create a button that would trigger a\n          popup and this would display the page as it should look live. The user\n          is able to add custom HTML, CSS and JavaScript so this all needs to be\n          sent through. This was assigned to Matt, another apprentice, and I, to\n          work on together. We decided to construct a basic step by step plan\n          and then get our manager to check this, to make sure we were on the\n          right lines. (Hover over the image to see larger)\n        </p>\n        <br />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          This was just a basic plan, and by no means exhaustive, but a good\n          starting point to kick things off. We would come to discover that\n          there was much more than the above that we needed to do, however the\n          whole project was a huge learning experience.\n        </p>\n      </div>\n      <hr />\n      <div className='md:px-8 my-20'>\n        <h3 className='mb-8 font-semibold'>Communication</h3>\n        <img\n          src={call}\n          alt='Pic of code'\n          className='rounded-lg w-1/10 float-left mr-8 mb-5'\n        />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          In the beginning, I was able to communicate with Matt in the office,\n          however as the Covid rules became stricter, and we started to work\n          from home, we moved our discussions online, to Slack and Microsoft\n          Teams.\n        </p>\n        <br />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          Although this was strange at first, it quickly became normal,\n          especially as we could use the screen share feature. Quite often, as I\n          finish later than Matt, I would call him in the morning to explain\n          what I had done the afternoon before, so that we were both up to speed\n          and this worked out nicely.\n        </p>\n        <br />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          After deciding it was best to organise how we would work, it was\n          agreed that I would start the main portal frontend and backend and\n          Matt would handle the renderer side of things, so we could both get\n          coding the project.\n        </p>\n      </div>\n      <hr />\n      <div className='md:px-8 my-20'>\n        <h3 className='mb-8 font-semibold'>Frontend</h3>\n        <img\n          src={prevbtn}\n          alt='Pic of code'\n          className='rounded-lg w-6/6 float-left mr-8 mb-10'\n        />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8'>\n          Firstly, I added a preview button into template three, I wanted to\n          test it in this one first, as it is the most commonly used template.\n          There was no functionality to the button yet, and after trying it out\n          in a couple of different places, I settled with it underneath the save\n          button.\n        </p>\n        <br />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          When I start a task, I normally try to see if there is anything\n          similar already built, to get inspiration from, but also, because it\n          seems a waste of time to write the same code again, if it has already\n          been done before. There were many other pop ups on the site, using a\n          model dialog, so I added this functionality to the button. When\n          clicked, it would open a model dialog. After discussing the with my\n          manager we decided not to use a modal dialog and a popup window would\n          give better results.\n        </p>\n        <br />\n        <img\n          src={google}\n          alt='Pic of code'\n          className='rounded-lg md:w-1/10 md:float-left md:mr-8 mb-5'\n        />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0 mb-20'>\n          The search results gave me some good links to window.open( ). I added\n          an click event to the preview button, which would call the method\n          “preview()” inside here.\n        </p>\n        <br />\n        <img\n          src={prevfunc}\n          alt='Pic of code'\n          className='rounded-lg md:w-3/6 float-right ml-8 mb-8 transform md:hover:scale-150'\n        />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8'>\n          This method was build over some time, with extra functionality added\n          in as the project developed. I decided that the preview method would\n          probably want to do something similar to a submit, so the top section\n          I copied from a submit() method. So when the user clicks on the button\n          it sends the data to the backend to save in the database. This meant I\n          could copy the code from submit.\n        </p>\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8'>\n          <br />\n          Firstly, it loops through the form and checks against some validation\n          methods. The custom_css’s value is set to the cssEditorText and then\n          the validation is checked again with the updateValueAndValidity( )\n          method. After this I created a variable formData to store the values\n          from the formGroup and loop through the images, so we could also get\n          the id’s for these.\n        </p>\n        <img\n          src={constructor}\n          alt='Pic of code'\n          className='rounded-lg md:w-2/6 float-left mr-8 mb-8 transform md:hover:scale-150 mt-10'\n        />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8'>\n          <br />\n          The next if statement is to check if the data is going to be updating\n          an existing preview, or creating a new one. If there is a cacheId then\n          it will point to service. Service had been defined earlier in the\n          constructor (TemplateService) and is executed when the if statement is\n          proven - it goes to the TemplateService and calls the\n          updatePreviewTemplate method. When this method is called, it sends\n          across information in the 6 parameters using .subscribe(). Then if\n          there is data, it opens a popup, using the centrePopup method.\n        </p>\n        <img\n          src={centreP}\n          alt='Pic of code'\n          className='rounded-lg md:w-3/6 float-right ml-8 mb-8 transform md:hover:scale-150 mt-10'\n        />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8'>\n          <br />I added this additional method, after finding information on\n          stackoverflow.com on how to centre popups. I thought it was much\n          better to add this one method to be called in each of the if\n          statements, and therefore abiding by the “do not repeat yourself”\n          rule. Afterwards, Matt added to this with the popupDimensions so that\n          it would work well when we changed the size of the popup.\n        </p>\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8'>\n          <br />\n          Later, on request from my manager I also added the popup.focus()\n          method.This says, if there is a popup and the popup isn’t closed then\n          bring it into focus, eliminating the user being able to open hundreds\n          of separate popups and being much more user friendly.\n        </p>\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8'>\n          The parameters that centrePopup is asking for are the url, which is\n          the path we want to open, the name of this window and win relates to\n          the dimensions. The else statement allows the popup to open if there\n          is no cacheId, no cacheId will have been created if this it the first\n          time the user clicks the preview button.\n        </p>\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8'>\n          <br />\n          Next we can take a look at the TemplateService methods, these are\n          created in the data services section.\n        </p>\n        <img\n          src={service}\n          alt='Pic of code'\n          className='rounded-lg md:w-3/6 float-right ml-8 mb-8 transform md:hover:scale-150 mt-10'\n        />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          <br />\n          I based both of these methods on ones that had been created previously\n          for when the user submits the form. These weren’t quite going to work\n          for me as I needed some extra data to be sent across so I renamed and\n          modified them as needed.\n          <br />\n          The first is accepting the 3 parameters in the preview method.\n          classname — which was TemplateThree in this case, the data, which was\n          formData, and the flow.\n        </p>\n        <br />\n        <img\n          src={flow}\n          alt='Pic of code'\n          className='rounded-lg md:w-2/6 md:float-left mr-8 mb-8 transform md:hover:scale-150 mt-10'\n        />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          <br />\n          This is the where the user changes the flow on the webpage, but it is\n          part of a different component. To share this data between the\n          components we need to use an Input() decorator.\n        </p>\n        <br />\n        <img\n          src={formPug}\n          alt='Pic of code'\n          className='rounded-lg md:w-2/6 float-right ml-8 mb-8 transform md:hover:scale-150 mt-10'\n        />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-20'>\n          <br />\n          Here you can see the .pug file, where we want to get the value of the\n          flow and then we allow app-template-three to use this.\n        </p>\n        <img\n          src={formPug2}\n          alt='Pic of code'\n          className='rounded-lg md:w-3/6 md:ml-8 mb-8 transform md:hover:scale-150 mt-10'\n        />\n        <br />\n        <img\n          src={inputs}\n          alt='Pic of code'\n          className='rounded-lg md:w-2/6 float-left mr-8 mb-8 transform md:hover:scale-150 mt-10'\n        />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-10'>\n          Now we're able to add the Input decorators into our .ts file, so that\n          the preview method can use the values. I did spend some time reading\n          the Angular documentation and looking at other examples on the site to\n          understand Inputs.\n        </p>\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-20'>\n          <br />\n          The return statement in the postPreviewTemplate uses post to then send\n          the information we have given in the parameters to the path we\n          provided, with the data. The path has been created using template\n          strings which allows us to replace, for example className, with the\n          className that has been provided in the parameters of\n          postPreviewTemplate.\n        </p>\n      </div>\n      <hr />\n      <div className='md:px-8 my-20'>\n        <h3 className='mb-8 font-semibold'>Backend</h3>\n        <img\n          src={backend}\n          alt='Pic of code'\n          className='rounded-lg w-6/6 mb-5'\n        />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          This is the backend code that I created to allow us to get the data\n          and save it into the database. It is all inside the controller for\n          templates. The @Rbac decorator is saying that the user needs to have\n          the permissions of ‘templates-create’ to use tis feature. It looks for\n          any data that is sent via the path in the @Post decorator. Then inside\n          preview() we are saying that if there is a className, then stored\n          inside variable model, we want to create a new instance of the\n          CachedPreview model which will include template - with the classname\n          being sent over in the param, flow, which is doing the same, and the\n          data, which is being requested. Then we save the model.\n        </p>\n        <br />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          To allow this to all be saved somewhere, I had to first create the\n          model and Matt created a migration which constructed the new table in\n          the database.\n        </p>\n      </div>\n      <hr />\n      <div className='md:px-8 my-20'>\n        <h3 className='mb-8 font-semibold'>Models and Migrations</h3>\n        <img\n          src={model}\n          alt='Pic of code'\n          className='rounded-lg w-6/6 mb-5 float-left mr-5'\n        />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          The model here sets out each column in the table and assigns its type,\n          eg/ string.\n        </p>\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          We want to say who the preview is created by, so we connect to the\n          User table using BelongsToOne and relate it to the created_by column.\n        </p>\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          We have a couple of image methods here which will be used later by the\n          renderer. Finally we have some blameables, which allows us to track\n          the times and who created the preview.\n        </p>\n      </div>\n      <div>\n        <img\n          src={migrationhelp}\n          alt='Pic of code'\n          className='rounded-lg md:w-2/6 float-right ml-8 mb-8 transform md:hover:scale-150 mt-10'\n        />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          <img\n            src={migration}\n            alt='Pic of code'\n            className='rounded-lg md:w-2/6 md:ml-8 mb-8 float-left mr-8 transform md:hover:scale-150 mt-10'\n          />\n          As Matt hadn’t practised many migrations before, he created the\n          migration. The table is created called cached_previews and stored in\n          the variable table. Then we create each column and allow it to have a\n          type, such as string, text, increments. Increments allows the table to\n          create a number stored in the id column and this will increment each\n          time as new one is created.\n          <br />\n          The created_by and updated_by column are integers which have a foreign\n          key - ‘references’ the id, in the users table.\n        </p>\n      </div>\n      <br />\n      <div className='md:px-8 my-10'>\n        <img src={db} alt='Pic of code' className='rounded-lg mb-8 mt-10' />\n        <p>\n          It was important to check that the data was saving in the database as\n          above.\n        </p>\n        <br />\n        <p>\n          As you can see, there is an extra column here that isn’t in the above\n          migration, this is because we realised afterwards that we would need\n          to save the flow also. Initially, we did not have flow as a part of\n          the project. However, when testing with our manager he asked us to add\n          this in, so that the correct flow would be assigned with the users\n          choice.\n        </p>\n        <br />\n        <p>\n          In the id column there is already over 400 preview created, this shows\n          how much testing and amending we had to do to get it to work how the\n          client wanted. I really enjoyed the back and forth of this assignment.\n          How the whole project evolved over time and how we managed to use the\n          feedback given to update and improve the feature.\n        </p>\n      </div>\n      <hr />\n      <div className='md:px-8 my-20'>\n        <h3 className='mb-8 font-semibold'>Renderer</h3>\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          This is the renderer side of this project. I had little experience\n          with this and almost no understanding of why we have a renderer and\n          how information gets passed to it at the start of this project.\n        </p>\n        <p className='w-6/6 mb-8 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          One of my favourite things about this project is getting to know this\n          a bit more, it was also probably the most challenging side and where\n          we got the most help from our manager.\n        </p>\n        <img\n          src={renderer}\n          alt='Pic of code'\n          className='rounded-lg w-6/6 mb-5 mr-5'\n        />\n        <p className='w-6/6 mb-8 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          We had decided early on Matt would handle this as he has more\n          experience than me and also had been doing some testing on the\n          renderer a couple of weeks before. However it ended up not going very\n          far so we worked on it together, after finishing the other parts.\n        </p>\n        <img\n          src={tempSwitch}\n          alt='Pic of code'\n          className='rounded-lg md:w-2/6 mb-5 md:float-left transform md:hover:scale-150 mr-5'\n        />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          We first created a new controller for anything sent via the /preview\n          path. It needed to use an @Auth decorator to check that the user was\n          logged in first. Then would get the data that was stored in the table\n          under the id sent in the path.\n        </p>\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          Stored in the model variable, we search CachedPreview table for one\n          matching id.\n        </p>\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          In the template variable we call the loadTemplate method, which gets\n          from the model the value in template column, and then uses a switch\n          statement to return the template name. This will allow us to render\n          using the correct template later on.\n        </p>\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          Then we deal with the images. This was quite complicated for me at\n          first and I went to one of my colleagues in the office for advice on\n          how to handle the images. They helped me write this bit of code.\n        </p>\n        <br />\n        <p className='w-6/6 mb-8 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          If you can remember earlier, in the model we had some methods for the\n          images. Using a for of loop, we go through each item in the imageIds\n          method. Then using an if statement we check if the data has anything\n          matching that imageIdColumn. If it does then we store in variable\n          image, we look into the Media table, find one id that matches the id\n          in our data. Next we use replace to remove the _id part of the\n          imageIdColumn so that this can then be used in the template. The css\n          is looking in the model for the backgroundImage without the _id part.\n        </p>\n        <img\n          src={media}\n          alt='Pic of code'\n          className='rounded-lg w-6/6 mb-5 mr-5'\n        />\n        <img\n          src={jsonText}\n          alt='Pic of code'\n          className='rounded-lg md:w-2/6 md:float-right mb-5 md:ml-5 transform md:hover:scale-150'\n        />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          This is then being stored as image and saved to the model:\n        </p>\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          The final part in this method is where we render everything to the\n          right path templates/ - here we have to remove the “template” part.\n          This is because it needs to relate to the correct template which has\n          only been named “one”, “two”, “three” etc. It is then setting each\n          part of the object to the relevant data in the model. For example\n          flow: model.flow - this is setting the flow to the flow that is stored\n          in the model.\n        </p>\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          After we had most of this done, we were advised that we would need to\n          check if the user was signed in first.\n        </p>\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          I found a pug file that was for “signup” and figured that we probably\n          wanted to do something similar. I created the file and then pasted in\n          the code from signup.\n          <br />\n          Some of the styling needed changing and the fields amended, to be a\n          more simple signing form.\n        </p>\n        <p className='w-6/6 mb-5 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          I was quite happy to find this as I have no experience in jQuery so\n          being able to look at code that should function in a related way was\n          really useful.\n        </p>\n        <img\n          src={rendPug}\n          alt='Pic of code'\n          className='rounded-lg md:w-2/6 md:float-left mb-5 md:mr-5 transform md:hover:scale-150'\n        />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          Then our manager helped us with what needed to go into the post.\n        </p>\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          We then added this to our Preview controller. The Get was quite easy\n          as there was similar code for signing, but our manager helped us quite\n          a lot with the Post.\n        </p>\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          Stored inside variable user we are using the validateByCredentials\n          method in _auth and requesting the username and password.\n        </p>\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          If there is a user and that user is an active user then they login and\n          we update their last logged in using moment, which captures the date\n          and time at that moment. This then gets saved.\n        </p>\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          A JWT token is generated to certify the identity of the user.\n          Otherwise, they are not logged in either because they are not active,\n          or any other reason is directed to the catch as errors with invalid\n          password.\n        </p>\n        <img\n          src={signin}\n          alt='Pic of code'\n          className='rounded-lg md:w-2/6 mt-8 md:float-left mb-5 md:mr-5 transform md:hover:scale-150'\n        />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          When we finally thought we had completed the task we committed the\n          files and pushed the branches. This is then merged into another\n          development branch with is viewed by our manager.\n        </p>\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          He sent us back an update on the Trello task as there were some things\n          that were not quite right.\n        </p>\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          If the user updates the preview, but hasn’t closed the popup window,\n          the popup doesn’t refresh, so no changes are reflected in the page. He\n          let us know that we would need to utilise the web socket to send a\n          message of “refresh”.\n        </p>\n        <img\n          src={websocket}\n          alt='Pic of code'\n          className='rounded-lg md:w-2/6 mt-8 md:float-right mb-5 md:mr-5 transform md:hover:scale-150'\n        />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          Again this was something that we got a lot of help with as there\n          wasn’t anything similar anywhere else and even after reading\n          documentation on web sockets, it wasn’t clear to us how to handle\n          this.\n        </p>\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          We were sure it would need to broadcast a message, as this was what\n          was outlined in the documentation. The was handled on the backend of\n          the main site.\n        </p>\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          We then needed to create a preview.js file in the renderer to listen\n          for the refresh message using subscribe and when it see’s that\n          message, it refreshes the page.\n        </p>\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          This was similar for what we needed to do when the user wanted to view\n          in a different size.\n        </p>\n      </div>\n      <hr />\n      <div className='md:px-8 my-20'>\n        <h3 className='mb-8 font-semibold'>Conclusions and Working Together</h3>\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          I learnt an incredible amount from this task, understanding the code\n          and following the code to the right places. The get and post using the\n          path and authorisation.\n          <br />I did find it challenging in many parts, especially where there\n          wasn’t similar things happening.\n          <br />\n          It was also a challenge to work and organise as a team when we both\n          have different skills. I did find I had to direct and explain the code\n          quite often but I enjoyed being able to help my colleague.\n          <br />I also found that explaining the code out loud, to someone else,\n          really helped me understand it properly.\n        </p>\n        <br />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          I was able to delegate the migrations task to Matt as I knew he had\n          not done any migrations before and it would be good experience.\n        </p>\n        <img\n          src={explain}\n          alt='Pic of code'\n          className='rounded-lg md:w-3/6 md:float-left mt-8 md:mr-8 mb-5 transform md:hover:scale-150'\n        />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          Here I explained to Matt about the if statements and how they work, we\n          needed to remove an if statement when we refactored the code as it\n          wasn’t doing anything.\n        </p>\n        <img\n          src={organise}\n          alt='Pic of code'\n          className='rounded-lg md:w-2/6 md:float-right mt-8 md:mr-8 mb-5 transform md:hover:scale-150'\n        />\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          I tried to ensure we were organised during the task and made the best\n          use of our time, so we didn’t crossover on what we were working on too\n          much and end up both doing the same thing.\n        </p>\n        <p className='w-6/6 md:ml-10 md:mr-10 lg:mt-8 md:mt-0'>\n          Finally, once the task was completed I was talking about another issue\n          with a colleague and he gave us some great feedback on the preview\n          popup. It was really great to hear someone with more experience saying\n          that we did a good job.\n        </p>\n        <img\n          src={feedback}\n          alt='Pic of code'\n          className='rounded-lg w-6/6 mt-8 mr-8 mb-5'\n        />\n      </div>\n      <hr />\n      <div className='md:px-8 my-20'>\n        <h3 className='mb-8 font-semibold'>The Finished Product</h3>\n        <video className='w-full' controls>\n          <source src={video} type='video/mp4' />\n          Your browser does not support the video tag.\n        </video>\n      </div>\n    </div>\n  );\n};\n\nexport default PopupPreview;\n","/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/components/Scroll/scroll.js",["146"],"/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/components/Scroll/Scroll.js",["147"],"/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/Pages/Demand Report/demandReport.js",[],"/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/components/ScrollToTop.js",["148"],"import { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nfunction ScrollToTop({ history }) {\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n    return () => {\n      unlisten();\n    };\n  }, []);\n\n  return null;\n}\n\nexport default withRouter(ScrollToTop);\n","/Users/hannahlynn/Desktop/Estio/Portfolio Website/portfolio/src/Pages/Criteria/criteria.js",[],"/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/index.js",[],"/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/reportWebVitals.js",[],"/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/App.js",[],"/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/components/Header/Header.js",[],"/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/components/Footer.js",[],"/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/components/ScrollToTop.js",["149"],"/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/components/About/About.js",[],"/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/components/Nav/Nav.js",[],"/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/components/SignIn/SignIn.js",[],"/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/components/Portfolio/Portfolio.js",[],"/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/components/Dropdown/Dropdown.js",[],"/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/Pages/Popup Preview/PopupPreview.js",[],"/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/Pages/Criteria/criteria.js",[],"/Users/hannahlynn/Desktop/Coding/Portfolio 2/portfolio2/src/Pages/System Logs/SystemLogs.js",[],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":8,"column":8,"nodeType":"156","messageId":"157","endLine":8,"endColumn":16},{"ruleId":"154","severity":1,"message":"158","line":17,"column":7,"nodeType":"156","messageId":"157","endLine":17,"endColumn":19},{"ruleId":"154","severity":1,"message":"159","line":2,"column":10,"nodeType":"156","messageId":"157","endLine":2,"endColumn":15},{"ruleId":"154","severity":1,"message":"160","line":2,"column":17,"nodeType":"156","messageId":"157","endLine":2,"endColumn":23},{"ruleId":"154","severity":1,"message":"161","line":2,"column":25,"nodeType":"156","messageId":"157","endLine":2,"endColumn":31},{"ruleId":"154","severity":1,"message":"162","line":4,"column":8,"nodeType":"156","messageId":"157","endLine":4,"endColumn":16},{"ruleId":"154","severity":1,"message":"163","line":52,"column":13,"nodeType":"156","messageId":"157","endLine":52,"endColumn":26},{"ruleId":"154","severity":1,"message":"164","line":31,"column":10,"nodeType":"156","messageId":"157","endLine":31,"endColumn":13},{"ruleId":"154","severity":1,"message":"165","line":31,"column":15,"nodeType":"156","messageId":"157","endLine":31,"endColumn":19},{"ruleId":"154","severity":1,"message":"166","line":31,"column":21,"nodeType":"156","messageId":"157","endLine":31,"endColumn":28},{"ruleId":"154","severity":1,"message":"167","line":31,"column":30,"nodeType":"156","messageId":"157","endLine":31,"endColumn":38},{"ruleId":"168","severity":1,"message":"169","line":12,"column":6,"nodeType":"170","endLine":12,"endColumn":8,"suggestions":"171"},{"ruleId":"154","severity":1,"message":"172","line":2,"column":8,"nodeType":"156","messageId":"157","endLine":2,"endColumn":13},{"ruleId":"168","severity":1,"message":"169","line":12,"column":6,"nodeType":"170","endLine":12,"endColumn":8,"suggestions":"173"},{"ruleId":"168","severity":1,"message":"169","line":12,"column":6,"nodeType":"170","endLine":12,"endColumn":8,"suggestions":"174"},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-unused-vars","'Dropdown' is defined but never used.","Identifier","unusedVar","'initialState' is assigned a value but never used.","'Route' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Criteria' is defined but never used.","'onRouteChange' is assigned a value but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'TabList' is defined but never used.","'TabPanel' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["177"],"'React' is defined but never used.",["178"],["179"],"no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"180","fix":"182"},{"desc":"180","fix":"183"},"Update the dependencies array to be: [history]",{"range":"184","text":"185"},{"range":"186","text":"185"},{"range":"187","text":"185"},[296,298],"[history]",[269,271],[269,271]]